{"version":3,"sources":["propTypes.js","TodoList.js","MainComponent.js","Footer.js","TodoApp.js","App.js","index.js"],"names":["propTypes","state","todo","objectOf","any","onCheck","func","onRemove","filteredTodoList","arrayOf","handleCheckAll","deleteTodo","handleTodoCheck","todoList","filterArray","checkedAll","bool","query","string","selected","handleChange","addTodo","deleteChecked","filter","TodoList","todoValue","_this","props","open","edit","setState","todoChange","event","target","value","discardChange","keyCode","_this2","this","_this$props","editTodo","react_default","a","createElement","Fragment","onSubmit","preventDefault","id","onKeyDown","ref","input","focus","type","className","onChange","htmlFor","concat","checked","completed","onDoubleClick","onClick","React","Component","MainComponent","style","length","display","map","key","src_TodoList","onToggle","defaultProps","Footer","_ref","item","toLowerCase","name","TodoApp","placeholder","src_MainComponent","src_Footer","App","currentTodo","find","every","forceUpdate","Date","now","Object","objectSpread","todoFilter","localStorage","getItem","JSON","parse","setItem","stringify","_this$state","src_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9671d90f.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\npropTypes.state = {\n  todo: propTypes.objectOf(propTypes.any),\n  onCheck: propTypes.func,\n  onRemove: propTypes.func,\n  filteredTodoList: propTypes.arrayOf(propTypes.any),\n  handleCheckAll: propTypes.func,\n  deleteTodo: propTypes.func,\n  handleTodoCheck: propTypes.func,\n  todoList: propTypes.arrayOf(propTypes.any),\n  filterArray: propTypes.arrayOf(propTypes.any),\n  checkedAll: propTypes.bool,\n  query: propTypes.string,\n  selected: propTypes.string,\n  handleChange: propTypes.func,\n  addTodo: propTypes.func,\n  deleteChecked: propTypes.func,\n  filter: propTypes.func,\n};\nexport default propTypes;\n","import React from 'react';\nimport propTypes from './propTypes';\n\nclass TodoList extends React.Component {\n  state = {\n    todoValue: this.props.todo.todo,\n    open: false,\n  };\n\n  edit = () => {\n    this.setState({ open: true });\n  };\n\n  todoChange = (event) => {\n    this.setState({ todoValue: event.target.value });\n  };\n\n  discardChange = (event) => {\n    if (event.keyCode === 27) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    const {\n      todo,\n      onCheck,\n      onRemove,\n      editTodo,\n    } = this.props;\n\n    return (\n      <>\n        {\n          !this.state.open ? (\n            <label htmlFor={`toggle${todo.id}`} className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={`toggle${todo.id}`}\n                onChange={() => onCheck(todo.id)}\n                checked={todo.completed}\n              />\n              <span\n                onDoubleClick={() => { this.edit(todo.id); }}\n                className={todo.completed ? 'active' : ''}\n              >\n                {todo.todo}\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={() => {\n                    onRemove(todo.id);\n                  }}\n                />\n              </span>\n            </label>\n          )\n            : (\n              <form onSubmit={(event) => {\n                event.preventDefault();\n                editTodo(todo.id, this.state.todoValue);\n                this.setState({ open: false });\n              }}\n              >\n                <input\n                  onKeyDown={this.discardChange}\n                  ref={input => input && input.focus()}\n                  type=\"text\"\n                  className=\"edit\"\n                  value={this.state.todoValue}\n                  onChange={this.todoChange}\n                />\n              </form>\n            )\n        }\n      </>\n    );\n  }\n}\n\nTodoList.propTypes = propTypes.state;\n\nexport default TodoList;\n","import React from 'react';\nimport propTypes from './propTypes';\nimport TodoList from './TodoList';\n\nfunction MainComponent(props) {\n  const {\n    todoList,\n    checkedAll,\n    filteredTodoList,\n    handleCheckAll,\n    deleteTodo,\n    handleTodoCheck,\n    editTodo,\n  } = props;\n\n  return (\n    <section\n      className=\"main\"\n      style={\n        todoList.length\n          ? { display: 'block' }\n          : { display: 'none' }\n      }\n    >\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={checkedAll}\n        onChange={handleCheckAll}\n      />\n      {/* eslint-disable-next-line max-len */}\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n      <label htmlFor=\"toggle-all\">\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\">\n        {\n          todoList.length > 0 ? (\n            filteredTodoList.map(todo => (\n              <li key={todo.id} className=\"\">\n                <TodoList\n                  deleteTodo={deleteTodo}\n                  onCheck={handleTodoCheck}\n                  onRemove={deleteTodo}\n                  todo={todo}\n                  onToggle={handleCheckAll}\n                  editTodo={editTodo}\n                />\n              </li>\n            ))\n          ) : []\n        }\n      </ul>\n    </section>\n  );\n}\n\nMainComponent.defaultProps = {\n  checkedAll: false,\n};\nMainComponent.propTypes = propTypes.state;\n\nexport default MainComponent;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Footer = ({\n  todoList, selected, deleteChecked, filterArray, filter,\n}) => (\n  <footer\n    className=\"footer\"\n    style={todoList.length > 0\n      ? { display: 'block' }\n      : { display: 'none' }}\n  >\n    <span className=\"todo-count\">\n      {\n        `${todoList.filter(todo => !todo.completed).length}\n             items left`\n      }\n    </span>\n\n    <ul className=\"filters\">\n      {\n        filterArray.map(item => (\n          <li key={item}>\n            <button\n              type=\"button\"\n              onClick={filter}\n              className={\n                selected === item.toLowerCase()\n                  ? `selected`\n                  : ''\n              }\n              name={item.toLowerCase()}\n            >\n              {item}\n            </button>\n          </li>\n        ))\n      }\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{ display: 'block' }}\n      onClick={deleteChecked}\n    >\n        Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = propTypes.state;\n\nexport default Footer;\n","import React from 'react';\nimport MainComponent from './MainComponent';\nimport Footer from './Footer';\nimport propTypes from './propTypes';\n\nconst TodoApp = (\n  {\n    todoList,\n    handleCheckAll,\n    checkedAll,\n    addTodo,\n    query,\n    handleChange,\n    filteredTodoList,\n    deleteTodo,\n    handleTodoCheck,\n    selected,\n    filterArray,\n    deleteChecked,\n    filter,\n    editTodo,\n  }\n) => (\n  <section className=\"todoapp\">\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={addTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n    <>\n      {\n        todoList\n        && filteredTodoList\n          ? (\n            <MainComponent\n              todoList={todoList}\n              checkedAll={checkedAll}\n              handleCheckAll={handleCheckAll}\n              filteredTodoList={filteredTodoList}\n              deleteTodo={deleteTodo}\n              handleTodoCheck={handleTodoCheck}\n              editTodo={editTodo}\n            />\n          )\n          : []\n      }\n    </>\n    {\n      todoList\n      && selected\n      && filterArray\n        ? (\n          <Footer\n            todoList={todoList}\n            filteredTodoList={filteredTodoList}\n            selected={selected}\n            filterArray={filterArray}\n            deleteChecked={deleteChecked}\n            filter={filter}\n          />\n        )\n        : []\n    }\n  </section>\n);\n\nTodoApp.propTypes = propTypes.state;\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    query: '',\n    checkedAll: false,\n  };\n\n  componentWillMount() {\n    if (localStorage.getItem('todoList')) {\n      this.setState(({\n        todoList: JSON.parse(localStorage.getItem('todoList')),\n        checkedAll: JSON.parse(\n          localStorage\n            .getItem('todoList')\n        )\n          .every(todo => todo.completed),\n        selected: 'all',\n      }));\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleTodoCheck = (id) => {\n    this.setState((state) => {\n      const currentTodo = state.todoList.find(todo => todo.id === id);\n\n      currentTodo.completed = !currentTodo.completed;\n    });\n    this.setState(state => ({\n      checkedAll: state.todoList.every(todo => todo.completed),\n    }));\n    this.forceUpdate();\n  };\n\n  editTodo = (id, todoValue) => {\n    this.setState((state) => {\n      const currentTodo = state.todoList.find(todo => todo.id === id);\n\n      currentTodo.todo = todoValue;\n      currentTodo.completed = false;\n    });\n    this.setState(state => ({\n      checkedAll: state.todoList.every(todo => todo.completed),\n    }));\n    this.forceUpdate();\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    if (this.state.query !== '') {\n      const todo = {\n        completed: false,\n        todo: this.state.query,\n        id: Date.now(),\n      };\n\n      this.setState(state => ({\n        todoList: state.todoList.concat(todo),\n        query: '',\n      }));\n    }\n\n    if (this.state.checkedAll) {\n      this.setState({ checkedAll: false });\n    }\n  };\n\n  handleCheckAll = () => {\n    this.setState(state => (state.todoList.every(todo => todo.completed)\n      ? {\n        todoList: state.todoList.map(todo => ({\n          ...todo,\n          completed: !todo.completed,\n        })),\n        checkedAll: false,\n      }\n      : {\n        todoList: state.todoList.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n        checkedAll: true,\n      }));\n  };\n\n  deleteChecked = () => {\n    this.todoFilter();\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n      selected: 'all',\n    }));\n  };\n\n  filter = (event) => {\n    this.setState({ selected: event.target.name });\n  };\n\n  todoFilter = (selected) => {\n    const { todoList } = this.state;\n\n    switch (selected) {\n      case 'active':\n        return todoList.filter(todo => todo.completed === false);\n      case 'completed':\n        return todoList.filter(todo => todo.completed === true);\n      default:\n        return todoList;\n    }\n  };\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => todo.id !== id),\n      checkedAll: state.todoList.every(\n        todo => todo.completed || todo.id === id\n      ),\n    }));\n  };\n\n  render() {\n    const {\n      todoList, query, selected, checkedAll,\n    } = this.state;\n\n    const filteredTodoList = this.todoFilter(selected);\n    const filterArray = ['All', 'Active', 'Completed'];\n\n    return (\n      <TodoApp\n        editTodo={this.editTodo}\n        todoList={todoList}\n        handleCheckAll={this.handleCheckAll}\n        checkedAll={checkedAll}\n        addTodo={this.addTodo}\n        query={query}\n        handleChange={this.handleChange}\n        filteredTodoList={filteredTodoList}\n        deleteTodo={this.deleteTodo}\n        handleTodoCheck={this.handleTodoCheck}\n        selected={selected}\n        filterArray={filterArray}\n        deleteChecked={this.deleteChecked}\n        filter={this.filter}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}