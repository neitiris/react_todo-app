{"version":3,"sources":["propTypes.js","TodoList.js","MainComponent.js","Footer.js","TodoApp.js","App.js","index.js"],"names":["propTypes","state","todo","objectOf","any","onCheck","func","onRemove","filteredTodoList","arrayOf","handleCheckAll","deleteTodo","handleTodoCheck","todoList","filterArray","checkedAll","bool","query","string","selected","handleChange","addTodo","deleteChecked","filter","TodoList","props","react_default","a","createElement","className","type","onChange","id","checked","completed","onClick","MainComponent","style","length","display","htmlFor","map","key","src_TodoList","onToggle","defaultProps","Footer","_ref","concat","item","toLowerCase","name","TodoApp","onSubmit","placeholder","value","Fragment","src_MainComponent","src_Footer","App","event","_this","setState","target","currentTodo","find","every","forceUpdate","preventDefault","Date","now","Object","objectSpread","todoFilter","localStorage","getItem","this","JSON","parse","setItem","stringify","_this$state","src_TodoApp","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.92ecca29.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\npropTypes.state = {\n  todo: propTypes.objectOf(propTypes.any),\n  onCheck: propTypes.func,\n  onRemove: propTypes.func,\n  filteredTodoList: propTypes.arrayOf(propTypes.any),\n  handleCheckAll: propTypes.func,\n  deleteTodo: propTypes.func,\n  handleTodoCheck: propTypes.func,\n  todoList: propTypes.arrayOf(propTypes.any),\n  filterArray: propTypes.arrayOf(propTypes.any),\n  checkedAll: propTypes.bool,\n  query: propTypes.string,\n  selected: propTypes.string,\n  handleChange: propTypes.func,\n  addTodo: propTypes.func,\n  deleteChecked: propTypes.func,\n  filter: propTypes.func,\n};\nexport default propTypes;\n","import React from 'react';\nimport propTypes from './propTypes';\n\nfunction TodoList(props) {\n  const { todo, onCheck, onRemove } = props;\n\n  return (\n    (\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => onCheck(todo.id)}\n          checked={todo.completed}\n        />\n        <span className={todo.completed ? 'active' : ''}>\n          {todo.todo}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => {\n              onRemove(todo.id);\n            }}\n          />\n        </span>\n      </div>\n    )\n  );\n}\n\nTodoList.propTypes = propTypes.state;\n\nexport default TodoList;\n","import React from 'react';\nimport propTypes from './propTypes';\nimport TodoList from './TodoList';\n\nfunction MainComponent(props) {\n  const {\n    todoList,\n    checkedAll,\n    filteredTodoList,\n    handleCheckAll,\n    deleteTodo,\n    handleTodoCheck,\n  } = props;\n\n  return (\n    <section\n      className=\"main\"\n      style={\n        todoList.length\n          ? { display: 'block' }\n          : { display: 'none' }\n      }\n    >\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={checkedAll}\n        onChange={handleCheckAll}\n      />\n      {/* eslint-disable-next-line max-len */}\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n      <label htmlFor=\"toggle-all\">\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\">\n        {\n          todoList.length > 0 ? (\n            filteredTodoList.map(todo => (\n              <li key={todo.id} className=\"\">\n                <TodoList\n                  deleteTodo={deleteTodo}\n                  onCheck={handleTodoCheck}\n                  onRemove={deleteTodo}\n                  todo={todo}\n                  onToggle={handleCheckAll}\n                />\n              </li>\n            ))\n          ) : []\n        }\n      </ul>\n    </section>\n  );\n}\n\nMainComponent.defaultProps = {\n  checkedAll: false,\n};\nMainComponent.propTypes = propTypes.state;\n\nexport default MainComponent;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Footer = ({\n  todoList, selected, deleteChecked, filterArray, filter,\n}) => (\n  <footer\n    className=\"footer\"\n    style={todoList.length > 0\n      ? { display: 'block' }\n      : { display: 'none' }}\n  >\n    <span className=\"todo-count\">\n      {\n        `${todoList.filter(todo => !todo.completed).length}\n             items left`\n      }\n    </span>\n\n    <ul className=\"filters\">\n      {\n        filterArray.map(item => (\n          <li key={item}>\n            <button\n              type=\"button\"\n              onClick={filter}\n              className={\n                selected === item.toLowerCase()\n                  ? `selected`\n                  : ''\n              }\n              name={item.toLowerCase()}\n            >\n              {item}\n            </button>\n          </li>\n        ))\n      }\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{ display: 'block' }}\n      onClick={deleteChecked}\n    >\n        Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = propTypes.state;\n\nexport default Footer;\n","import React from 'react';\nimport MainComponent from './MainComponent';\nimport Footer from './Footer';\nimport propTypes from './propTypes';\n\nconst TodoApp = (\n  {\n    todoList,\n    handleCheckAll,\n    checkedAll,\n    addTodo,\n    query,\n    handleChange,\n    filteredTodoList,\n    deleteTodo,\n    handleTodoCheck,\n    selected,\n    filterArray,\n    deleteChecked,\n    filter,\n  }\n) => (\n  <section className=\"todoapp\">\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={addTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n    <>\n      {\n        todoList\n        && filteredTodoList\n          ? (\n            <MainComponent\n              todoList={todoList}\n              checkedAll={checkedAll}\n              handleCheckAll={handleCheckAll}\n              filteredTodoList={filteredTodoList}\n              deleteTodo={deleteTodo}\n              handleTodoCheck={handleTodoCheck}\n            />\n          )\n          : []\n      }\n    </>\n    {\n      todoList\n      && selected\n      && filterArray\n        ? (\n          <Footer\n            todoList={todoList}\n            filteredTodoList={filteredTodoList}\n            selected={selected}\n            filterArray={filterArray}\n            deleteChecked={deleteChecked}\n            filter={filter}\n          />\n        )\n        : []\n    }\n  </section>\n);\n\nTodoApp.propTypes = propTypes.state;\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    query: '',\n    checkedAll: false,\n  };\n\n  componentWillMount() {\n    if (localStorage.getItem('todoList')) {\n      this.setState(({\n        todoList: JSON.parse(localStorage.getItem('todoList')),\n        checkedAll: JSON.parse(\n          localStorage\n            .getItem('todoList')\n        )\n          .every(todo => todo.completed),\n        selected: 'all',\n      }));\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleTodoCheck = (id) => {\n    this.setState((state) => {\n      const currentTodo = state.todoList.find(todo => todo.id === id);\n\n      currentTodo.completed = !currentTodo.completed;\n    });\n    this.setState(state => ({\n      checkedAll: state.todoList.every(todo => todo.completed),\n    }));\n    this.forceUpdate();\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    if (this.state.query !== '') {\n      const todo = {\n        completed: false,\n        todo: this.state.query,\n        id: Date.now(),\n      };\n\n      this.setState(state => ({\n        todoList: state.todoList.concat(todo),\n        query: '',\n      }));\n    }\n  };\n\n  handleCheckAll = () => {\n    this.setState(state => (state.todoList.every(todo => todo.completed)\n      ? {\n        todoList: state.todoList.map(todo => ({\n          ...todo,\n          completed: !todo.completed,\n        })),\n        checkedAll: false,\n      }\n      : {\n        todoList: state.todoList.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n        checkedAll: true,\n      }));\n  };\n\n  deleteChecked = () => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n    }));\n  };\n\n  filter = (event) => {\n    this.setState({ selected: event.target.name });\n  };\n\n  todoFilter = (selected) => {\n    const { todoList } = this.state;\n\n    switch (selected) {\n      case 'active':\n        return todoList.filter(todo => todo.completed === false);\n      case 'completed':\n        return todoList.filter(todo => todo.completed === true);\n      default:\n        return todoList;\n    }\n  };\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => todo.id !== id),\n    }));\n  };\n\n  render() {\n    const {\n      todoList, query, selected, checkedAll,\n    } = this.state;\n\n    const filteredTodoList = this.todoFilter(selected);\n    const filterArray = ['All', 'Active', 'Completed'];\n\n    return (\n      <TodoApp\n        todoList={todoList}\n        handleCheckAll={this.handleCheckAll}\n        checkedAll={checkedAll}\n        addTodo={this.addTodo}\n        query={query}\n        handleChange={this.handleChange}\n        filteredTodoList={filteredTodoList}\n        deleteTodo={this.deleteTodo}\n        handleTodoCheck={this.handleTodoCheck}\n        selected={selected}\n        filterArray={filterArray}\n        deleteChecked={this.deleteChecked}\n        filter={this.filter}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}