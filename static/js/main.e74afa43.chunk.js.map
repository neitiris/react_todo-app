{"version":3,"sources":["TodoList.js","App.js","index.js"],"names":["TodoApp","props","todo","onCheck","onRemove","react_default","a","createElement","key","id","className","type","onClick","checked","completed","App","state","todoList","query","handleChange","event","_this","setState","target","value","forceUpdate","handleTodoCheck","prevState","currentTodo","find","addTodo","preventDefault","Date","now","concat","handleCheckAll","every","map","Object","objectSpread","deleteChecked","filter","name","selected","todoFilter","deleteTodo","localStorage","getItem","this","JSON","parse","setItem","stringify","_this2","_this$state","filteredTodoList","onSubmit","placeholder","onChange","style","length","display","htmlFor","TodoList","onToggle","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e74afa43.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nfunction TodoApp(props) {\n  const { todo, onCheck, onRemove } = props;\n\n  return (\n    (\n      <li key={todo.id} className=\"\">\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onClick={() => onCheck(todo.id)}\n            checked={todo.completed}\n          />\n          {/* eslint-disable-next-line max-len */}\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n          <label>\n            {todo.todo}\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => {\n                onRemove(todo.id);\n              }}\n            />\n          </label>\n        </div>\n      </li>\n    )\n  );\n}\n\nTodoApp.propTypes = {\n  todo: propTypes.objectOf(propTypes.object).isRequired,\n  onCheck: propTypes.func.isRequired,\n  onRemove: propTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    query: '',\n  };\n\n  componentWillMount() {\n    if (localStorage.getItem('todoList')) {\n      this.setState({\n        todoList: JSON.parse(localStorage.getItem('todoList')),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n    this.forceUpdate();\n  };\n\n  handleTodoCheck = (id) => {\n    this.setState((prevState) => {\n      const currentTodo = prevState.todoList.find(todo => todo.id === id);\n\n      currentTodo.completed = !currentTodo.completed;\n    });\n    this.forceUpdate();\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    if (this.state.query !== '') {\n      const todo = {\n        completed: false,\n        todo: this.state.query,\n        id: Date.now(),\n      };\n\n      this.setState(state => ({\n        todoList: state.todoList.concat(todo),\n        query: '',\n      }));\n      this.forceUpdate();\n    }\n  };\n\n  handleCheckAll = () => {\n    this.setState((prevState) => {\n      if (prevState.todoList.every(todo => todo.completed)) {\n        return {\n          todoList: prevState.todoList.map(todo => ({\n            ...todo,\n            completed: !todo.completed,\n          })),\n        };\n      }\n\n      return {\n        todoList: prevState.todoList.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      };\n    });\n  };\n\n  deleteChecked = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => !todo.completed),\n    }));\n  };\n\n  filter = (event) => {\n    const { name } = event.target;\n\n    this.setState({ selected: name });\n  };\n\n  todoFilter = (selected) => {\n    const { todoList } = this.state;\n\n    if (selected === 'active') {\n      return todoList.filter(todo => todo.completed === false);\n    }\n\n    if (selected === 'completed') {\n      return todoList.filter(todo => todo.completed === true);\n    }\n\n    return todoList;\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => todo.id !== id),\n    }));\n  };\n\n  render() {\n    const {\n      todoList,\n      query,\n      selected,\n    } = this.state;\n\n    const filteredTodoList = this.todoFilter(selected);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={this.addTodo}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={query}\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n\n        <section\n          className=\"main\"\n          style={\n            todoList.length\n              ? { display: 'block' }\n              : { display: 'none' }\n          }\n        >\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.handleCheckAll}\n          />\n          {/* eslint-disable-next-line max-len */}\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n          <label htmlFor=\"toggle-all\">\n            Mark all as complete\n          </label>\n\n          <ul className=\"todo-list\">\n            {\n              todoList.length > 0 ? (\n                filteredTodoList.map(todo => (\n                  <TodoList\n                    deleteTodo={this.deleteTodo}\n                    onCheck={this.handleTodoCheck}\n                    onRemove={this.deleteTodo}\n                    todo={todo}\n                    onToggle={this.handleCheckAll}\n                  />\n                ))\n              ) : []\n            }\n          </ul>\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={todoList.length > 0\n            ? { display: 'block' }\n            : { display: 'none' }}\n        >\n          <span className=\"todo-count\">\n            {\n              `${todoList.filter(todo => !todo.completed).length}\n             items left`\n            }\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filter}\n                className=\"all\"\n                name=\"all\"\n              >\n                All\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filter}\n                name=\"active\"\n                className=\"active\"\n              >\n                Active\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filter}\n                className=\"completed\"\n                name=\"completed\"\n              >\n                Completed\n              </button>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.deleteChecked}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}